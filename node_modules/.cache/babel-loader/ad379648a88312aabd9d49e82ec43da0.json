{"ast":null,"code":"var _jsxFileName = \"/Users/vivi/Documents/1082/simple_web3test/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Web3 from 'web3';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nconst MySwal = withReactContent(Swal); //Contracts\n\nimport SproutContract from './build/contracts/Sprout.json'; //Components\n\nimport Header from './components/header';\nimport User from './components/user';\nimport SproutFarm from './components/sproutfarm';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      try {\n        const web3 = new Web3(Web3.givenProvider || 'ws://localhost:8545');\n        const accounts = await web3.eth.getAccounts();\n        const networkId = await web3.eth.net.getId();\n        const deployNetwork = SproutContract.networks[networkId];\n        const instance = new web3.eth.Contract(SproutContract.abi, deployNetwork.address);\n        this.setState({\n          web3: web3,\n          accounts: accounts,\n          contract: instance\n        });\n        /*Register here*/\n\n        const {\n          value: username\n        } = await Swal.fire({\n          title: 'Enter your user name',\n          input: 'text',\n          inputValue: inputValue,\n          showCancelButton: true,\n          inputValidator: value => {\n            if (!value) {\n              return 'You need to write something!';\n            }\n          }\n        });\n\n        if (username) {\n          Swal.fire(`Your usern name is ${username}`);\n        } //end register\n\n      } catch (error) {\n        alert(`Failed to load web3, accounts, or contract. Check console for details.`);\n        console.error(error);\n      }\n    };\n\n    this.state = {\n      web3: null,\n      accounts: null,\n      username: null,\n      userbalance: null,\n      contract: null,\n      contract2: null\n    };\n    this.handleClick = this.handleClick.bind(this);\n  } //end constructor\n\n\n  //end componetdidmount\n  //this is for contract testing\n  async handleClick() {\n    //var res = await this.state.contract.methods.SayHello().call({from: this.state.accounts[0]});\n    //console.log(res)\n    var res2 = await this.state.contract.methods.Register(this.state.accounts[0]).send({\n      from: this.state.accounts[0]\n    });\n    console.log(res2);\n  }\n\n  render() {\n    if (!this.state.web3) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 14\n        }\n      }, \"Loading Web3, accounts, and contract...\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"main_container\",\n      class: \"ts container grid very\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"four wide column segment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(User, {\n      username: this.state.username,\n      userbalance: this.state.userbalance,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }))));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/vivi/Documents/1082/simple_web3test/src/index.js"],"names":["React","ReactDOM","Web3","Swal","withReactContent","MySwal","SproutContract","Header","User","SproutFarm","App","Component","constructor","props","componentDidMount","web3","givenProvider","accounts","eth","getAccounts","networkId","net","getId","deployNetwork","networks","instance","Contract","abi","address","setState","contract","value","username","fire","title","input","inputValue","showCancelButton","inputValidator","error","alert","console","state","userbalance","contract2","handleClick","bind","res2","methods","Register","send","from","log","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Web3 from 'web3';\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nconst MySwal = withReactContent(Swal)\n//Contracts\nimport SproutContract from './build/contracts/Sprout.json';\n\n//Components\nimport Header from './components/header';\nimport User from './components/user';\nimport SproutFarm from './components/sproutfarm';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      web3: null,\n      accounts: null,\n      username: null,\n      userbalance: null,\n      contract: null,\n      contract2: null\n    }\n    this.handleClick = this.handleClick.bind(this);\n  }//end constructor\n  componentDidMount = async() =>  {\n    try {\n      const web3 = new Web3(Web3.givenProvider || 'ws://localhost:8545');\n      const accounts = await web3.eth.getAccounts();\n      const networkId = await web3.eth.net.getId();\n\n      const deployNetwork = SproutContract.networks[networkId];\n      const instance = new web3.eth.Contract(\n        SproutContract.abi,\n        deployNetwork.address\n      )\n      this.setState({\n        web3: web3,\n        accounts: accounts,\n        contract: instance\n      });\n      /*Register here*/\n      \n      const { value: username } = await Swal.fire({\n        title: 'Enter your user name',\n        input: 'text',\n        inputValue: inputValue,\n        showCancelButton: true,\n        inputValidator: (value) => {\n          if (!value) {\n            return 'You need to write something!'\n          }\n        }\n      })\n      if (username) {\n        Swal.fire(`Your usern name is ${username}`)\n      }\n      //end register\n    } catch (error) {\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };//end componetdidmount\n  //this is for contract testing\n  async handleClick(){\n    //var res = await this.state.contract.methods.SayHello().call({from: this.state.accounts[0]});\n    //console.log(res)\n    var res2 = await this.state.contract.methods.Register(this.state.accounts[0]).send({from: this.state.accounts[0]});\n    console.log(res2)\n  }\n  render() {\n    if (!this.state.web3) {\n      return <div>Loading Web3, accounts, and contract...</div>;\n    }\n    return(\n      <div>\n        <Header />\n        <div id=\"main_container\" class=\"ts container grid very\">\n          <div class=\"four wide column segment\">\n              <User username={this.state.username} userbalance={this.state.userbalance} />\n          </div>\n        </div>\n      </div>\n    )\n  }\n} \n\nReactDOM.render(<App/>, document.getElementById('root'));\n"]},"metadata":{},"sourceType":"module"}